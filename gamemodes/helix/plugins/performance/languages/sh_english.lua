--[[
| This file was obtained through the combined efforts
| of Madbluntz & Plymouth Antiquarian Society.
|
| Credits: lifestorm, Gregory Wayne Rossel JR.,
| 	Maloy, DrPepper10 @ RIP, Atle!
|
| Visit for more: https://plymouth.thetwilightzone.ru/
--]]


LANGUAGE = {
	optGmod_mcore_test = "Multi-Core Rendering",
	optdGmod_mcore_test = "Toggles Multi-Core Rendering for your game. Requires a restart.",
	optMat_queue_mode = "Material queue mode",
	optdMat_queue_mode = "The queue/thread mode the material system should use (-1 = default, 0 = synchronous single thread, 1 = queued single threaded, 2 = queued multithreaded).",
	optCl_threaded_bone_setup = "Multi-Threaded Bone System",
	optdCl_threaded_bone_setup = "Toggles parallel processing for the bone system.",
	optR_decals = "Max decals",
	optdR_decals = "The maximum number of decals allowed to render at any one time.",
	optR_drawmodeldecals = "Model decals",
	optdR_drawmodeldecals = "Whether decals should render on models or not.",
	optR_maxmodeldecal = "Max model decals",
	optdR_maxmodeldecal = "The maximum number of decals allowed to render on models at any one time.",
	optCl_ragdoll_collide = "Clientside ragdoll collision",
	optdCl_ragdoll_collide = "Whether or not clientside models should have collisions.",
	optR_WaterDrawReflection = "Water Reflections",
	optdR_WaterDrawReflection = "Whether the water should have reflections.",
	optR_WaterDrawRefraction = "Water Refraction",
	optdR_WaterDrawRefraction = "Whether the water should have refractions.",
	optR_shadows = "Model shadows",
	optdR_shadows = "Whether models and props should cast shadows.",
	optMat_mipmaptextures = "'Mipmap' textures",
	optdMat_mipmaptextures = "Increase texture quality in exchange for performance.",
	optMat_filtertextures = "Filter textures",
	optdMat_filtertextures = "Increase texture quality in exchange for performance.",
	optMat_envmapsize = "Environment Map Size",
	optdMat_envmapsize = "Adjusts the resolution of environment maps that are used for reflective surfaces.",
	optCl_phys_props_enable = "Clientside physics props",
	optdCl_phys_props_enable = "Toggles clientside physics props. Requires a reconnect.",
	optCl_ejectbrass = "Eject Brass",
	optdCl_ejectbrass = "Whether bullet shells should eject out of weapons when fired.",
	optMat_filterlightmaps = "Filter lightmaps",
	optdMat_filterlightmaps = "Increase light quality in exchange for performance.",
	optMuzzleflash_light = "Muzzleflash light",
	optdMuzzleflash_light = "Whether the muzzleflash should light up the player's viewmodel.",
	optProps_break_max_pieces = "Maximum prop gibs",
	optdProps_break_max_pieces = "Maximum prop breakable piece count (-1 = model default).",
	optR_3dsky = "3D Skybox",
	optdR_3dsky = "Whether 3D Skyboxes should render.",
	optR_maxdlights = "Maximum Dynamic Lights",
	optdR_maxdlights = "The maximum dynamic lights allowed to exist at any one time.",
	optR_eyemove = "Eye movement",
	optdR_eyemove = "Whether character and NPC eyes should move.",
	optR_eyes = "Render eyes",
	optdR_eyes = "Whether character and NPC eyes should render.",
	optR_teeth = "Render teeth",
	optdR_teeth = "Whether character and NPC teeth should render.",
	optR_radiosity = "Radiosity setting",
	optdR_radiosity = "The manner in which radiosity is sampled (0 = no radiosity, 1 = radiosity with ambient cube (6 samples), 2 = radiosity with 162 samples, 3 = 162 samples for static props, 6 samples for everything else).",
	optR_worldlights = "World Lights",
	optdR_worldlights = "The number of world lights to use per vertex.",
	optRope_averagelight = "Rope Average Light",
	optdRope_averagelight = "Makes ropes use average of cubemap lighting instead of max intensity.",
	optRope_collide = "Rope collisions",
	optdRope_collide = "Whether ropes should collide with the world.",
	optRope_rendersolid = "Render ropes",
	optdRope_rendersolid = "Whether ropes should render.",
	optRope_smooth = "Rope Anti-Aliasing",
	optdRope_smooth = "Whether ropes should have anti-aliasing measures applied on them.",
	optRope_subdiv = "Rope subdivision",
	optdRope_subdiv = "Rope subdivision amount.",
	optViolence_ablood = "Alien Blood",
	optdViolence_ablood = "Whether alien blood should render.",
	optViolence_agibs = "Alien Gibs",
	optdViolence_agibs = "Whether alien gibs should render.",
	optViolence_hblood = "Human Blood",
	optdViolence_hblood = "Whether human blood should render.",
	optViolence_hgibs = "Human Gibs",
	optdViolence_hgibs = "Whether human gibs should render.",
	optAi_expression_optimization = "AI Expression Optimization",
	optdAi_expression_optimization = "Whether NPC expressions should not render if you cannot see them.",
	optCl_detaildist = "Detail Distance",
	optdCl_detaildist = "Distance at which detail props are no longer visible.",
	optCl_detailfade = "Detail Fade",
	optdCl_detailfade = "Distance across which detail props fade in.",
	optR_fastzreject = "Fast Z Reject",
	optdR_fastzreject = "Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings.",
	optCl_show_splashes = "Render water splashes",
	optdCl_show_splashes = "Whether water splashes should render.",
	optR_drawflecks = "Render flecks",
	optdR_drawflecks = "Whether particles should be created when a wall is shot.",
	optR_threaded_particles = "Multi-Threaded Particle System",
	optdR_threaded_particles = "Toggles parallel processing for the particle system.",
	optSnd_mix_async = "Multi-Threaded Sound System",
	optdSnd_mix_async = "Toggles parallel processing for the sound system.",
	optR_threaded_renderables = "Multi-Threaded Rendering System",
	optdR_threaded_renderables = "Toggles parallel processing for the rendering system.",
	optCl_forcepreload = "Force Pre-Load",
	optdCl_forcepreload = "Forcefully pre-loads all content before map load, as opposed to loading things when needed."
}
